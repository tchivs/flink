<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2023 Confluent Inc.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.confluent.flink</groupId>
		<artifactId>cc-flink-extensions</artifactId>
		<version>1.18-SNAPSHOT</version>
	</parent>

	<artifactId>flink-integration-impl</artifactId>
	<name>Confluent Flink : Integration Implementation</name>

	<properties>
		<japicmp.skip>true</japicmp.skip>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Have to pick versions for things pulled in by Confluent -->
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protoc.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>animal-sniffer-annotations</artifactId>
				<version>${animal-sniffer-annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${error_prone.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- Required by the JobGraphWrapperImpl -->
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-runtime</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.flink</groupId>
					<artifactId>flink-rpc-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.flink</groupId>
					<artifactId>flink-rpc-akka-loader</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.flink</groupId>
					<artifactId>flink-shaded-zookeeper-3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Required by the JobClientWrapperImpl -->
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.confluent.flink</groupId>
			<artifactId>flink-integration-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-api-java</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-planner_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.confluent.flink</groupId>
			<artifactId>cc-flink-table-extended_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-base</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent.flink</groupId>
			<artifactId>cc-flink-schema-registry</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.confluent.flink</groupId>
			<artifactId>flink-faker</artifactId>
			<version>0.16.0</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<!-- Avoid dependency convergence errors -->
					<groupId>org.apache.flink</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<!--
							Similar to https://github.com/hazelcast/hazelcast/issues/20945.
							Jacoco injects methods such as this:
							   private static boolean[] org.apache.calcite.rel.metadata.BuiltInMetadata$RowCount$Handler.$jacocoInit()
							This then breaks an assertion in org.apache.calcite.rel.metadata.MetadataDef.
							-->
							<exclude>org/apache/calcite/rel/metadata/BuiltInMetadata$*$Handler
							</exclude>
						</excludes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>forbid-direct-table-planner-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<!-- We need to depend on table planner because we rely on its internals -->
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>shade-integration-impl</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
							</transformers>
							<shadeTestJar>false</shadeTestJar>
							<shadedArtifactAttached>false</shadedArtifactAttached>
							<createDependencyReducedPom>true</createDependencyReducedPom>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>LICENSE</exclude>
										<exclude>NOTICE</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
